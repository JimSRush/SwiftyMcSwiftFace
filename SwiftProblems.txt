Given three integers, a, b & c, the function should return true if b or c is within the range of 1 from a AND the other is far away, namely different by 2 or more from A.

eg:

closeFar(1, 2, 10) → true
closeFar(1, 2, 3) → false
closeFar(4, 1, 3) → true


Given two integers greater than 0, return whichever one is closest to 21 *without* going over. Return 0 if they both go over

eg:

blackJack(19,21) -> 21
blackJack(17, 20) -> 20
blackJack(17, 22) -> 17


Compute the sum of the squares of all the even numbers in a given list.


Return the number of UTF8, UTF16, UTF32 & Unicode Scalars & visual characters in a given string.

Count the number of times a given letter occurs in a string.

Return a list of anagrams of a given word.


Given a string, return true if it ends in "ly". 

endsLy("oddly") → true
endsLy("y") → false
endsLy("oddy") → false



Given a string and an int n, return a string made of the first and last n chars from the string. The string length will be at least n. 

nTwice("Hello", 2) → "Helo"
nTwice("Chocolate", 3) → "Choate"
nTwice("Chocolate", 1) → "Ce"



Given an array of ints, swap the first and last elements in the array. Return the modified array. The array length will be at least 1. 

swapEnds({1, 2, 3, 4}) → {4, 2, 3, 1}
swapEnds({1, 2, 3}) → {3, 2, 1}
swapEnds({8, 6, 7, 9, 5}) → {5, 6, 7, 9, 8}



Start with 2 int arrays, a and b, each length 2. Consider the sum of the values in each array. Return the array which has the largest sum. In event of a tie, return a. 

biggerTwo({1, 2}, {3, 4}) → {3, 4}
biggerTwo({3, 4}, {1, 2}) → {3, 4}
biggerTwo({1, 1}, {1, 2}) → {1, 2}


